<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Đỗ Đăng Quân</title>
    <link>https://dodangquan.github.io/post/</link>
    <description>Recent content in Posts on Đỗ Đăng Quân</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi</language>
    <lastBuildDate>Thu, 30 Nov 2017 13:48:55 +0700</lastBuildDate>
    
	<atom:link href="https://dodangquan.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tìm kiếm với Git</title>
      <link>https://dodangquan.github.io/post/2017/11/searching-by-git-log/</link>
      <pubDate>Thu, 30 Nov 2017 13:48:55 +0700</pubDate>
      
      <guid>https://dodangquan.github.io/post/2017/11/searching-by-git-log/</guid>
      <description>Git là một công cụ quản lý phiên bản tuyệt vời, bạn sẽ không bao giờ &amp;ldquo;để lỡ&amp;rdquo; bất cứ điều gì với công cụ này. Tuy nhiên, đôi khi sẽ rất khó khăn trong việc tìm kiếm lại thông tin của những thứ bạn cần. Hầu hết, chúng ta sẽ sử dụng git log, nhưng sẽ không phải là cho tất cả mọi thứ.
1. Tìm kiếm file Thỉnh thoảng, chúng ta biết chắc chắn là có một file cụ thể nào đó trong repository, nhưng lại không thể biết được chính xác vị trí của file đó nằm ở đâu.</description>
    </item>
    
    <item>
      <title>Thực hiện tùy biến Spring AOP Annotation</title>
      <link>https://dodangquan.github.io/post/2017/09/customize-spring-aop-annotation/</link>
      <pubDate>Thu, 28 Sep 2017 10:51:45 +0700</pubDate>
      
      <guid>https://dodangquan.github.io/post/2017/09/customize-spring-aop-annotation/</guid>
      <description>1. Annotation AOP là gì? Giới thiệu nhanh thì AOP là viết tắt của lập trình hướng khía cạnh (Aspect Oriented Programming), đây là kĩ thuật chèn thêm hành vi vào đoạn code đã tồn tại mà không cần phải sửa code trực tiếp.
Bài viết giả định bạn đọc đã có những kiến thức cơ bản về lập trình hướng khía cạnh. Nếu bạn chưa có kiến thức về AOP, hãy tìm hiểu qua về khái niệm của pointcut và advice trong lập trình hướng khía cạnh.</description>
    </item>
    
    <item>
      <title>Enable Icons Menus Trong Hệ Điều Hành Linux</title>
      <link>https://dodangquan.github.io/post/2016/04/enable-icons-menu-linux/</link>
      <pubDate>Sat, 02 Apr 2016 22:53:38 +0700</pubDate>
      
      <guid>https://dodangquan.github.io/post/2016/04/enable-icons-menu-linux/</guid>
      <description>Mặc định trong Ubuntu và Fedora icon menu sẽ bị tắt đi. Để có thể hiển thị các icon trong menu, ta cần thực hiện 1 trong 2 lệnh sau:
1. Enable menus-have-icons 1  ~$ gsettings set org.gnome.desktop.interface menus-have-icons true   2. Override xsettings 1  ~$ gsettings set org.gnome.settings-daemon.plugins.xsettings overrides &amp;#34;{&amp;#39;Gtk/ButtonImages&amp;#39;: &amp;lt;1&amp;gt;, &amp;#39;Gtk/MenuImages&amp;#39;: &amp;lt;1&amp;gt;}&amp;#34;   </description>
    </item>
    
    <item>
      <title>Một số annotation trong Spring Framework</title>
      <link>https://dodangquan.github.io/post/2016/01/mot-so-annotation-trong-spring/</link>
      <pubDate>Tue, 26 Jan 2016 17:27:40 +0700</pubDate>
      
      <guid>https://dodangquan.github.io/post/2016/01/mot-so-annotation-trong-spring/</guid>
      <description>Dưới đây là một số annotation trong Spring Framework cần biết:
Spring Core @Autowired: Tự động liên kết các bean được sử dụng trong các class với các bean được Spring Container sinh ra và quản lý.
1 2 3 4 5 6 7 8 9 10 11 12  // @org.springframework.beans.factory.annotation.Autowired @Service public class BookServiceImpl implements BookService { @Autowired private BookDao bookDao; @Autowired private CustomerDao customerDao; ... }   @Scope: mặc định trong Spring, hầu hết scope phổ biến cho các autodetected components là singleton (singleton: Với mỗi bean, Spring IoC Container chỉ tạo duy nhất một đối tượng), để thay đổi phạm vi ta sử dụng @Scope annotation).</description>
    </item>
    
  </channel>
</rss>